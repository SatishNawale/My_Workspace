
#include<iostream>
#include<conio.h>

	int i=10;			//global variable
	static int j = 20;	//global static variable

	class Demo
	{
	public:
		int c;				//data member
		static int d;		//static data member

	public:
		void fun()			//non - static funcion both static and non-static data members accessible
		{
			this->c = 60;
			std::cout<<"non-static data member - "<<c<<std::endl<<"static data member - "<<d<<std::endl;
		}
		static void gun()
		{
			static int a = 100;
			std::cout<<"Local static - "<<a<<std::endl;
			a++;
			std::cout<<"Static data member - "<<d<<std::endl;
		}
	};

	int Demo::d=100;			//static variable initialization


int main()
{
	int a = 30;		//local variable
	static int b = 40; //local static acceptible in C++ not in JAVA

	std::cout<<a<<std::endl<<b<<std::endl;
	std::cout<<std::endl;

	Demo d;
	d.fun();
	std::cout<<std::endl;
	Demo::gun();
	std::cout<<std::endl;
	Demo::gun();
	std::cout<<std::endl;
	Demo::gun();
	std::cout<<std::endl;
	std::cout<<std::endl<<std::endl;



	Demo d1;
	d1.c=10;
	std::cout<<"Non-static "<<d1.c<<std::endl<<"Static "<<d1.d<<std::endl;

	Demo d2;
	d1.c=20;
	std::cout<<"Non-static "<<d1.c<<std::endl<<"Static "<<d1.d<<std::endl;

	Demo d3;
	d1.c=30;
	std::cout<<"Non-static "<<d1.c<<std::endl<<"Static "<<d1.d<<std::endl;

	std::cout<<std::endl<<std::endl<<"After changing values"<<std::endl;
	(d1.c)++;
	(d1.d)++;



	d1.c=10;
	std::cout<<"Non-static "<<d1.c<<std::endl<<"Static "<<d1.d<<std::endl;
	d1.c=20;
	std::cout<<"Non-static "<<d1.c<<std::endl<<"Static "<<d1.d<<std::endl;
	d1.c=30;
	std::cout<<"Non-static "<<d1.c<<std::endl<<"Static "<<d1.d<<std::endl;
	std::cout<<std::endl<<std::endl;



	getch();
	return 0;
}

/*

30
40

non-static data member - 60
static data member - 100

Local static - 100
Static data member - 100

Local static - 101
Static data member - 100

Local static - 102
Static data member - 100



Non-static 10
Static 100
Non-static 20
Static 100
Non-static 30
Static 100


After changing values
Non-static 10
Static 101
Non-static 20
Static 101
Non-static 30
Static 101


*/